(program (functionDefinition (typeSpecifier int) (plainDeclarator (identifier main)) ( ) (compoundStatement { (declaration (typeSpecifier int) (initDeclarators (initDeclarator (declarator (plainDeclarator (identifier a))))) ;) (declaration (typeSpecifier int) (initDeclarators (initDeclarator (declarator (plainDeclarator (identifier b))))) ;) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier a)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (constant (integerConstant 0))))))))))))))))))) ;)) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier b)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (constant (integerConstant 10))))))))))))))))))) ;)) (statement (compoundStatement { (declaration (typeSpecifier int) (initDeclarators (initDeclarator (declarator (plainDeclarator (identifier b))))) ;) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier b)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (constant (integerConstant 20))))))))))))))))))) ;)) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier a)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier a)))))) (additiveOperator +) (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier b)))))))))))))))))) ;)) })) (statement (jumpStatement return (expression (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier a))))))))))))))))) ;)) })))
