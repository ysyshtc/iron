(program (declaration typedef (typeSpecifier (typedefName long)) (declarators (declarator (plainDeclarator (identifier LL)))) ;) (functionDefinition (typeSpecifier int) (plainDeclarator (identifier main)) ( ) (compoundStatement { (declaration (typeSpecifier int) (initDeclarators (initDeclarator (declarator (plainDeclarator (identifier a))))) ;) (declaration (typeSpecifier int) (initDeclarators (initDeclarator (declarator (plainDeclarator (identifier b))))) ;) (statement (selectionStatement if ( (expression (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier a))))))))) (equalityOperator ==) (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier b))))))))))))))))) ) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier a)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (constant (integerConstant 1))))))))))))))))))) ;)))) (statement (iterationStatement for ( (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier i)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (constant (integerConstant 0))))))))))))))))))) ; (expression (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier i)))))))) (relationalOperator <) (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (constant (integerConstant 100)))))))))))))))))) ; (expression (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression ++ (unaryExpression (postfixExpression (primaryExpression (identifier i)))))))))))))))))) ) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier b)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier a)))))))))))))))))) ;)))) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier a)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (constant (integerConstant 0))))))))))))))))))) ;)) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier b)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (constant (integerConstant 10))))))))))))))))))) ;)) (statement (compoundStatement { (declaration (typeSpecifier int) (initDeclarators (initDeclarator (declarator (plainDeclarator (identifier b))))) ;) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier b)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (constant (integerConstant 20))))))))))))))))))) ;)) (statement (expressionStatement (expression (assignmentExpression (unaryExpression (postfixExpression (primaryExpression (identifier a)))) (assignmentOperator =) (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier a)))))) (additiveOperator +) (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier b)))))))))))))))))) ;)) })) (statement (jumpStatement return (expression (assignmentExpression (logicalOrExpression (logicalAndExpression (inclusiveOrExpression (exclusiveOrExpression (andExpression (equalityExpression (relationalExpression (shiftExpression (additiveExpression (multiplicativeExpression (castExpression (unaryExpression (postfixExpression (primaryExpression (identifier a))))))))))))))))) ;)) })))
